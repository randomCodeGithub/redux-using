{"version":3,"sources":["logo.svg","NewComp.js","App.js","reportWebVitals.js","Store/Reducer.js","index.js"],"names":["NewComp","styles","fontStyle","color","className","style","this","props","message","onClick","ButttonChange","Component","connect","state","dispatch","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","newState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,I,YCGTA,E,4MACJC,OAAS,CACPC,UAAW,SACXC,MAAO,U,uDAIP,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAOC,KAAKL,OAAhB,SAAyBK,KAAKC,MAAMC,UACpC,wBAAQC,QAASH,KAAKC,MAAMG,cAA5B,yB,GAVcC,aA4BPC,eAZS,SAACC,GACvB,MAAO,CACLL,QAASK,EAAML,YAIQ,SAACM,GAC1B,MAAO,CACLJ,cAAe,kBAAMI,EAAS,CAAEC,KAAM,oBAI3BH,CAA6CZ,GCV7CgB,E,4MAfbf,OAAS,CACPC,UAAW,OACXC,MAAO,Q,uDAIP,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAOC,KAAKL,OAAhB,iBACA,cAAC,EAAD,W,GAVUU,aCOHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCPRQ,EAAe,CACnBlB,QAAS,gBAYImB,EATC,WAAmC,IAAlCd,EAAiC,uDAAzBa,EAAcE,EAAW,uCAC1CC,EAAQ,eAAQhB,GAKtB,MAHoB,gBAAhBe,EAAOb,OACTc,EAASrB,QAAU,iBAEdqB,GCDHC,EAAQC,YAAYJ,GAE1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.5d2f9548.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass NewComp extends Component {\r\n  styles = {\r\n    fontStyle: \"italic\",\r\n    color: \"purple\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h3 style={this.styles}>{this.props.message}</h3>\r\n        <button onClick={this.props.ButttonChange}>TEST</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    message: state.message,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ButttonChange: () => dispatch({ type: \"Change test\" }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewComp);\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport NewComp from \"./NewComp\";\n\nclass App extends Component {\n  styles = {\n    fontStyle: \"bold\",\n    color: \"teal\",\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3 style={this.styles}>HI!</h3>\n        <NewComp />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  message: \"INITIAL TEXT\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n\r\n  if (action.type === \"Change test\") {\r\n    newState.message = \"NEW TEXT TESt\";\r\n  }\r\n  return newState;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport reducer from \"./Store/Reducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}